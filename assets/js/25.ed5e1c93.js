(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{214:function(e,t,a){"use strict";a.r(t);var r=a(0),o=Object(r.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("div",{staticClass:"content"},[a("h1",{attrs:{id:"core-category-page"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#core-category-page","aria-hidden":"true"}},[e._v("#")]),e._v(" Core Category Page")]),e._v(" "),a("h2",{attrs:{id:"props"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#props","aria-hidden":"true"}},[e._v("#")]),e._v(" Props")]),e._v(" "),a("p",[e._v("No props")]),e._v(" "),a("h2",{attrs:{id:"data"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#data","aria-hidden":"true"}},[e._v("#")]),e._v(" Data")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("pagination")]),e._v(" - an object that defines two settings:\n"),a("ul",[a("li",[a("code",[e._v("perPage")]),e._v(" of product items to load per page, currently set to 50")]),e._v(" "),a("li",[a("code",[e._v("offset")]),e._v(" that probably defines which page has been last loaded, currently set to 0 and isn't changed anywhere.")])])]),e._v(" "),a("li",[a("code",[e._v("enabled")]),e._v(" - enables/disables paging. When it's disabled it lazy-loads other products on a scroll")]),e._v(" "),a("li",[a("code",[e._v("filters.available")]),e._v(", "),a("code",[e._v("filters.chosen")]),e._v(" - a set of filters that user has defined on Category page - there we have available filters and chosen filter values")]),e._v(" "),a("li",[a("code",[e._v("products")]),e._v(" - computed property that returns a list of product items of the current category from the Vuex store.")]),e._v(" "),a("li",[a("code",[e._v("isCategoryEmpty")]),e._v(" - computed property that returns "),a("code",[e._v("true")]),e._v(" if the product list of the current category is empty.")]),e._v(" "),a("li",[a("code",[e._v("category")]),e._v(" - computed property that returns the current category from the Vuex store.")]),e._v(" "),a("li",[a("code",[e._v("categoryName")]),e._v(" - category name.")]),e._v(" "),a("li",[a("code",[e._v("categoryId")]),e._v(" - category ID.")]),e._v(" "),a("li",[a("code",[e._v("breadcrumbs")]),e._v(" - breadcrumbs for the current category from the Vuex store.")]),e._v(" "),a("li",[a("code",[e._v("productsTotal")]),e._v(" - how many products are in the category.")]),e._v(" "),a("li",[a("code",[e._v("lazyLoadProductsOnscroll")]),e._v(" - allows lazy-loading more products on a scroll, by default it's true")])]),e._v(" "),a("h2",{attrs:{id:"methods"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#methods","aria-hidden":"true"}},[e._v("#")]),e._v(" Methods")]),e._v(" "),a("ul",[a("li",[a("p",[a("code",[e._v("fetchData ({ store, route })")]),e._v(" - prepares query for fetching a list of products of the current category and dispatches "),a("code",[e._v("product/list")]),e._v(" action that extracts that list.")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("{ store, route }")]),e._v(" - an object consisting of the Vuex store and global router references.")])])]),e._v(" "),a("li",[a("p",[a("code",[e._v("validateRoute ({ store, route })")]),e._v(" - this method is called whenever the global "),a("code",[e._v("$route")]),e._v(" object changes its value. It dispatches "),a("code",[e._v("'category/single'")]),e._v(" action to load current category object and then calls "),a("code",[e._v("fetchData")]),e._v(" method to load a list of products that relate to this category.")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("{ store, route }")]),e._v(" - an object consisting of the Vuex store and global router references.")])])])]),e._v(" "),a("h2",{attrs:{id:"events"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#events","aria-hidden":"true"}},[e._v("#")]),e._v(" Events")]),e._v(" "),a("h3",{attrs:{id:"asyncdata"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#asyncdata","aria-hidden":"true"}},[e._v("#")]),e._v(" asyncData")]),e._v(" "),a("p",[e._v("Since the app is using SSR, this method prefetches and resolves the asynchronous data before rendering happens and saves it to Vuex store. Asynchronous data for Category page is a list of all categories, category attributes and list of products for each category.")]),e._v(" "),a("h3",{attrs:{id:"beforemount"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#beforemount","aria-hidden":"true"}},[e._v("#")]),e._v(" beforeMount")]),e._v(" "),a("p",[a("code",[e._v("filter-changed-category")]),e._v(" event listener is initialized. The event is fired when the user selects custom filter value.")]),e._v(" "),a("h3",{attrs:{id:"beforedestroy"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#beforedestroy","aria-hidden":"true"}},[e._v("#")]),e._v(" beforeDestroy")]),e._v(" "),a("p",[a("code",[e._v("filter-changed-category")]),e._v("event listener is removed.")])])}],!1,null,null,null);o.options.__file="category-page.md";t.default=o.exports}}]);